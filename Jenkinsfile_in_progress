pipeline {
    agent {
          docker {
                	image 'openjdk:11'
               		}
          	}
  
    stages {
          stage('Building') {
             steps {
                  sh 'chmod +x gradlew'
                  sh "./gradlew build   |  tee output.log"
                   }
                }
                stage('Monitoring the logs') {
                    steps {
                        script {
                                sh '! grep "Task" output.log'
                        }
                    }
               }
      }
}
##############################################################################
 stage("sonar quality check"){
            agent {
                docker {
                    image 'openjdk:11'
                }
            }
            steps{
                script{
                    withSonarQubeEnv(credentialsId: 'sonarQube') {
                            sh 'chmod +x gradlew'
                            sh './gradlew sonarqube'
                    }

                    timeout(time: 1, unit: 'HOURS') {
                      def qg = waitForQualityGate()
                      if (qg.status != 'OK') {
                           error "Pipeline aborted due to quality gate failure: ${qg.status}"
                      }
                    }

                }  
            }
        }
        